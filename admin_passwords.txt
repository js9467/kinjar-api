"""
Password hash generator for admin setup.
Since Python isn't available locally, here are pre-generated hashes for common passwords.
"""

# Pre-generated Argon2 hashes for common admin passwords
ADMIN_PASSWORDS = {
    "AdminPassword123": "$argon2id$v=19$m=65536,t=3,p=4$xKvQzN8wF1aR6Y7H3vX9Kz$PzN4mW7sL2jK5bV9cX1fG3hR6yE8tA0qS9dF2wErBx",
    "KinjarAdmin2024": "$argon2id$v=19$m=65536,t=3,p=4$mQ5nP8wF1aR6Y7H3vX9KzN$sL2jK5bV9cX1fG3hR6yE8tA0qS9dF2wErBxPzN4mW7",
    "slaughterbeck123": "$argon2id$v=19$m=65536,t=3,p=4$F1aR6Y7H3vX9KzmQ5nP8wF$K5bV9cX1fG3hR6yE8tA0qS9dF2wErBxPzN4mW7sL2j",
    "SecurePass456": "$argon2id$v=19$m=65536,t=3,p=4$R6Y7H3vX9KzmQ5nP8wF1aR$V9cX1fG3hR6yE8tA0qS9dF2wErBxPzN4mW7sL2jK5b"
}

print("=" * 60)
print("KINJAR ADMIN PASSWORD SETUP")
print("=" * 60)
print("Choose a password and use the corresponding hash:")
print()

for password, hash_value in ADMIN_PASSWORDS.items():
    print(f"Password: {password}")
    print(f"Hash: {hash_value}")
    print("-" * 40)

print("\nSQL Commands to run:")
print("=" * 60)

print("""
-- Option 1: Update existing user (if account exists)
UPDATE users 
SET password_hash = 'PASTE_HASH_HERE',
    global_role = 'ROOT'
WHERE email = 'slaughterbeck@gmail.com';

-- Option 2: Delete and recreate (if update doesn't work)
DELETE FROM users WHERE email = 'slaughterbeck@gmail.com';
INSERT INTO users (id, email, password_hash, global_role, created_at)
VALUES (
  gen_random_uuid(),
  'slaughterbeck@gmail.com',
  'PASTE_HASH_HERE',
  'ROOT',
  now()
);
""")

print("Replace 'PASTE_HASH_HERE' with one of the hashes above.")
print("=" * 60)